{
  "?xml": {
    "@_version": "1.0",
    "@_encoding": "UTF-8"
  },
  "rss": {
    "channel": {
      "title": {
        "#text": "Adam Argyle"
      },
      "description": {
        "#text": "RSS Feed for Adam Argyle: Web design & development tips & tricks: CSS, JS, HTML, Design, & UX."
      },
      "link": {
        "#text": "https://nerdy.dev"
      },
      "image": {
        "url": {
          "#text": "https://nerdy.dev/rss-icon.png"
        },
        "title": {
          "#text": "Adam Argyle"
        },
        "link": {
          "#text": "https://nerdy.dev"
        }
      },
      "generator": {
        "#text": "RSS for Node"
      },
      "lastBuildDate": {
        "#text": "Sat, 05 Jul 2025 20:10:34 GMT"
      },
      "atom:link": {
        "@_href": "https://nerdy.dev/rss.xml",
        "@_rel": "self",
        "@_type": "application/rss+xml"
      },
      "copyright": {
        "#text": "2025 Adam Argyle"
      },
      "language": {
        "#text": "en"
      },
      "webMaster": {
        "#text": "adam.is@nerdy.dev (Adam Argyle)"
      },
      "ttl": {
        "#text": 60
      },
      "category": [
        {
          "#text": "CSS"
        },
        {
          "#text": "HTML"
        },
        {
          "#text": "JavaScript"
        },
        {
          "#text": "Front-End"
        },
        {
          "#text": "Design"
        }
      ],
      "icon": {
        "#text": "https://nerdy.dev/rss-icon.png"
      },
      "logo": {
        "#text": "https://nerdy.dev/skull-card.png"
      },
      "item": [
        {
          "title": {
            "#text": "Sizzle Rizzle"
          },
          "description": {
            "#text": "\n          <video style=\"display: none\" src=\"/media/sizzle-reel-2025.mp4\" alt=\"A quick peek into projects from my past\" height=\"1080\" width=\"1920\" />\n        <p>A <small>small</small> sample of <strong>UI</strong>, <strong>code</strong>, <strong>tools</strong>, and <strong>design</strong>\nfrom my 20 professional years of webdev.</p>\n"
          },
          "link": {
            "#text": "https://nerdy.dev/sizzle-rizzle?utm_source=rss"
          },
          "guid": {
            "#text": "https://nerdy.dev/sizzle-rizzle?utm_source=rss",
            "@_isPermaLink": "true"
          },
          "category": [
            {
              "#text": "note"
            },
            {
              "#text": "media"
            }
          ],
          "dc:creator": {
            "#text": "atom@argyleink"
          },
          "pubDate": {
            "#text": "Fri, 04 Jul 2025 21:20:40 GMT"
          },
          "enclosure": {
            "@_url": "/media/sizzle-reel-2025.mp4",
            "@_length": "0",
            "@_type": "video/mp4"
          },
          "media:thumbnail": {
            "@_url": "/media/sizzle-reel-2025.mp4"
          }
        },
        {
          "title": {
            "#text": "Fathers Day 2025"
          },
          "description": {
            "#text": "<p>Happy <a href=\"https://en.wikipedia.org/wiki/Father%27s_Day\">Father&#39;s Day</a> to other <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Node/parentNode\"><code>parentNode</code></a>s</p>\n"
          },
          "link": {
            "#text": "https://nerdy.dev/fathers-day-2025?utm_source=rss"
          },
          "guid": {
            "#text": "https://nerdy.dev/fathers-day-2025?utm_source=rss",
            "@_isPermaLink": "true"
          },
          "category": {
            "#text": "note"
          },
          "dc:creator": {
            "#text": "dad@pops"
          },
          "pubDate": {
            "#text": "Sun, 15 Jun 2025 18:10:04 GMT"
          }
        },
        {
          "title": {
            "#text": "Nintendo Switch Homescreen recreated with CSS and a li'l bit of JS"
          },
          "description": {
            "#text": "\n          <img style=\"display: none\" src=\"https://nerdy.dev/media/switch-homescreen-both-light-dark.jpg\" alt=\"Text emphasized alt text example\" height=\"636\" width=\"1920\" />\n        <p>Someone across the room could hear the sounds from a device and know that it&#39;s coming from a Nintendo Switch.</p>\n<p>Just the audio alone is iconic; but that homescreen layout and scroll experience, :cheffs-kiss:</p>\n<p><video \n          src=\"/media/switch-homescreen-demo.mp4\" \n          width=\"1920\" \n          height=\"636\"\n          alt=\"\"\n          preload=\"none\"\n          poster=\"/media/switch-homescreen-demo.avif\"\n          controls \n          loop\n          muted \n          playsinline \n          allowFullScreen\n        /></p>\n<p>Let&#39;s <a href=\"https://codepen.io/argyleink/pen/ByNyvox\">remake it with CSS</a>!</p>\n<ol>\n<li>light/dark theme + <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/@media/forced-colors\">forced colors</a> support</li>\n<li>automatic scroll UX upgrades based on user&#39;s browser capabilities</li>\n<li>keyboard, mouse, touch, allllll good</li>\n</ol>\n<style>\n@scope {\n  .codepen-embed {\n    block-size: 450px;\n  }\n}\n</style>\n\n<p>\n          <iframe \n            class=\"codepen-embed\" \n            scrolling=\"no\" \n            title=\"null\" \n            src=\"https://codepen.io/argyleink/embed/preview/ByNyvox?default-tab=result&editable=true&theme-id=43079\" \n            frameborder=\"no\" \n            loading=\"lazy\" \n            allowtransparency=\"true\" \n            allowfullscreen=\"true\"\n          >\n            See the Pen <a href=\"https://codepen.io/argyleink/embed/preview/ByNyvox\"> by Adam Argyle (<a href=\"https://codepen.io/argyleink\">@argyleink</a>)\n            on <a href=\"https://codepen.io\">CodePen</a>.\n          </iframe>\n        </p>\n<br>\n\n<p><q class=\"info\">This is 1 of 3 scroll experiences I taught at <a href=\"https://cssday.nl\">CSS Day</a> 2025. What a lovely conference!</q></p>\n\n        <h2>\n          HTML\n          <a name=\"html\" href=\"#html\">#</a>\n        </h2>\n       \n        <h3>\n          Structure\n          <a name=\"structure\" href=\"#structure\">#</a>\n        </h3>\n       <p>I&#39;ve found the following &quot;3 element structure&quot; for a scroller to help prevent headaches and gotchas across browsers. The structure supports you both in styling, interactions, and container queries.</p>\n<ol>\n<li><code>.scroll--root</code>: highest level container for the scroller, may have borders or spacing styles</li>\n<li><code>.scroll--viewport</code>: the element with <code>overflow</code>, containment and scrollbar styles</li>\n<li><code>.scroll--content</code>: wrapper to aid in cross browser padding oddities or other impacts that an overflow container may apply to children</li>\n</ol>\n<pre><code class=\"language-html\"><pre class=\"shiki css-variables\" style=\"background-color:var(--shiki-background);color:var(--shiki-foreground)\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:var(--shiki-foreground)\">&#x3C;</span><span style=\"color:var(--shiki-token-string-expression)\">section</span><span style=\"color:var(--shiki-token-function)\"> class</span><span style=\"color:var(--shiki-foreground)\">=</span><span style=\"color:var(--shiki-token-string-expression)\">\"scroll--root\"</span><span style=\"color:var(--shiki-foreground)\">></span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">  &#x3C;</span><span style=\"color:var(--shiki-token-string-expression)\">div</span><span style=\"color:var(--shiki-token-function)\"> id</span><span style=\"color:var(--shiki-foreground)\">=</span><span style=\"color:var(--shiki-token-string-expression)\">\"scroller\"</span><span style=\"color:var(--shiki-token-function)\"> class</span><span style=\"color:var(--shiki-foreground)\">=</span><span style=\"color:var(--shiki-token-string-expression)\">\"scroll--viewport\"</span><span style=\"color:var(--shiki-foreground)\">></span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">    &#x3C;</span><span style=\"color:var(--shiki-token-string-expression)\">ul</span><span style=\"color:var(--shiki-token-function)\"> class</span><span style=\"color:var(--shiki-foreground)\">=</span><span style=\"color:var(--shiki-token-string-expression)\">\"scroll--content\"</span><span style=\"color:var(--shiki-foreground)\">></span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">      /* your content */</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">    &#x3C;/</span><span style=\"color:var(--shiki-token-string-expression)\">ul</span><span style=\"color:var(--shiki-foreground)\">></span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">  &#x3C;/</span><span style=\"color:var(--shiki-token-string-expression)\">div</span><span style=\"color:var(--shiki-foreground)\">></span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">&#x3C;/</span><span style=\"color:var(--shiki-token-string-expression)\">section</span><span style=\"color:var(--shiki-foreground)\">></span></span></code></pre>\n</code></pre>\n\n        <h2>\n          CSS\n          <a name=\"css\" href=\"#css\">#</a>\n        </h2>\n       \n        <h3>\n          Essentials\n          <a name=\"essentials\" href=\"#essentials\">#</a>\n        </h3>\n       <p>These are the things you should always put on your scroller:</p>\n<ol>\n<li>use the <code>overflow</code> shorthand and set both axes to prevent surprises</li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/overscroll-behavior\"><code>overscroll-behavior</code></a> should always match the scrolling axis</li>\n<li>padding and <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-padding\"><code>scroll-padding</code></a> should always match</li>\n<li>smooth <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\"><code>scroll-behavior</code></a> if the use is ok with motion</li>\n</ol>\n<pre><code class=\"language-css\"><pre class=\"shiki css-variables\" style=\"background-color:var(--shiki-background);color:var(--shiki-foreground)\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:var(--shiki-token-function)\">.scroll--viewport</span><span style=\"color:var(--shiki-foreground)\"> {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">  overflow</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> auto hidden</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">  overscroll-behavior-x</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> contain</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">  padding-inline</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-function)\"> var</span><span style=\"color:var(--shiki-token-constant)\">(--size-8)</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">  scroll-padding-inline</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-function)\"> var</span><span style=\"color:var(--shiki-token-constant)\">(--size-8)</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">  @</span><span style=\"color:var(--shiki-token-constant)\">media</span><span style=\"color:var(--shiki-foreground)\"> (</span><span style=\"color:var(--shiki-token-constant)\">prefers-reduced-motion</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> no-preference</span><span style=\"color:var(--shiki-foreground)\">) {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">    scroll-behavior</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> smooth</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">  }</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">}</span></span></code></pre>\n</code></pre>\n<p>See the <code>@layer lessons.essentials</code> in <a href=\"https://codepen.io/argyleink/pen/ByNyvox?editors=0100\">the demo</a> for more comments.</p>\n\n        <h3>\n          Containerization\n          <a name=\"containerization\" href=\"#containerization\">#</a>\n        </h3>\n       <p>Since a scroller of often extrinsically sized, it won&#39;t suffer from the side effect that container queries can cause (where they collapse). This makes scroller and container queries a natural pair.</p>\n<ol>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/container\">container</a> shorthand lets me set the name and the type(s) in one spot</li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_containment/Container_queries\">container queries</a> for children to use to ask this container questions about the width and height while also providing a context for container query units like <code>cqw</code></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_conditional_rules/Container_scroll-state_queries\">scroll-state</a> for children to ask about which game is snapped</li>\n</ol>\n<p>Plus, <a href=\"https://developer.chrome.com/blog/css-scroll-state-queries\"><code>scroll-state</code></a> queries on the scroller and on the snap items are meaningful and worth setting up while we&#39;re here.</p>\n<pre><code class=\"language-css\"><pre class=\"shiki css-variables\" style=\"background-color:var(--shiki-background);color:var(--shiki-foreground)\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:var(--shiki-token-function)\">.scroll--root</span><span style=\"color:var(--shiki-foreground)\"> {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">  container</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> --homescreen / size</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-function)\">.scroll--viewport</span><span style=\"color:var(--shiki-foreground)\"> {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">  container</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> --homescreen-scroller / size scroll-state</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-function)\">.scroll--content</span><span style=\"color:var(--shiki-token-keyword)\"> ></span><span style=\"color:var(--shiki-token-string-expression)\"> li</span><span style=\"color:var(--shiki-foreground)\"> {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-comment)\">  /* children will use snapped scroll-state() */</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">  container-type</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> scroll-state</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">}</span></span></code></pre>\n</code></pre>\n<p>See the <code>@layer lessons.containerize</code> in <a href=\"https://codepen.io/argyleink/pen/ByNyvox?editors=0100\">the demo</a> for more comments.</p>\n\n        <h3>\n          Snapping\n          <a name=\"snapping\" href=\"#snapping\">#</a>\n        </h3>\n       <p>Meaningfully, the Switch scroller snaps the scroll items to the left, in line with the layout grid. We can do this in CSS with just a couple styles.</p>\n<p>Since the <code>scroll-padding</code> already matches the inline <code>padding</code>, the snapping here will match the alignment perfectly.</p>\n<pre><code class=\"language-css\"><pre class=\"shiki css-variables\" style=\"background-color:var(--shiki-background);color:var(--shiki-foreground)\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:var(--shiki-token-function)\">.scroll--viewport</span><span style=\"color:var(--shiki-foreground)\"> {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">  scroll-snap-type</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> x mandatory</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-function)\">.scroll--content</span><span style=\"color:var(--shiki-token-keyword)\"> ></span><span style=\"color:var(--shiki-token-string-expression)\"> li</span><span style=\"color:var(--shiki-foreground)\"> {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">  scroll-snap-align</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> start</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">}</span></span></code></pre>\n</code></pre>\n<p>See the <code>@layer lessons.scroll-snap</code> in <a href=\"https://codepen.io/argyleink/pen/ByNyvox?editors=0100\">the demo</a> for more comments.</p>\n\n        <h3>\n          Overscroll effect\n          <a name=\"overscroll-effect\" href=\"#overscroll-effect\">#</a>\n        </h3>\n       <p>It&#39;s common for scrollers to offer an effect if you&#39;ve reached the beginning or end; an overscroll effect. The most common is an elastic effect, like a rubber band is tight and preventing you from going further and when you let go it snaps back. We can do this with CSS scroll snapping.</p>\n<p>Here&#39;s a moment where wrapping all your content in a <code>.scroll--content</code> container is valuable. The overscroll amount is the size of an invisible item at the beginning and end of the scroller. The browser will let you scroll to them, but since they won&#39;t have <code>scroll-snap-align</code> set and the scroller itself has <code>x mandatory</code> set, the scroller will never rest on these invisible overscroll spacers.</p>\n<ol>\n<li>The inline-start spacer will be <code>25cqi</code>, offering a 25% overscroll vibe</li>\n<li>The inline-end spacer will be larger at <code>90cqi</code>, ensuring the last game can be snapped to the start</li>\n</ol>\n<pre><code class=\"language-css\"><pre class=\"shiki css-variables\" style=\"background-color:var(--shiki-background);color:var(--shiki-foreground)\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:var(--shiki-token-function)\">.scroll--content</span><span style=\"color:var(--shiki-foreground)\"> {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">  display</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> flex</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">  &#x26;</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\">:before</span><span style=\"color:var(--shiki-token-punctuation)\">,</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">  &#x26;::after {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">    content: </span><span style=\"color:var(--shiki-token-string-expression)\">\"\"</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">    display</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> block</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">    inline-size</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> 25</span><span style=\"color:var(--shiki-token-keyword)\">cqi</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">    flex-shrink</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> 0</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">  &#x26;</span><span style=\"color:var(--shiki-token-function)\">::after</span><span style=\"color:var(--shiki-foreground)\"> {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">    inline-size</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> 90</span><span style=\"color:var(--shiki-token-keyword)\">cqi</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">  }</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">}</span></span></code></pre>\n</code></pre>\n<p>See the <code>@layer lessons.overscroll-effect</code> in <a href=\"https://codepen.io/argyleink/pen/ByNyvox?editors=0100\">the demo</a> for more comments.</p>\n\n        <h3>\n          Scroll Animation\n          <a name=\"scroll-animation\" href=\"#scroll-animation\">#</a>\n        </h3>\n       <p>This was a personal addition, not part of the original Switch homescreen design.</p>\n<p>It&#39;s subtle; fade out the game you just scrolled past. Leave a hint or peek of it, but dim it out. This reduced cognitive load and helps the eye maintain the alignment of the snapped game to the grid.</p>\n<p>Here&#39;s the simple keyframes.</p>\n<pre><code class=\"language-css\"><pre class=\"shiki css-variables\" style=\"background-color:var(--shiki-background);color:var(--shiki-foreground)\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:var(--shiki-token-keyword)\">@keyframes</span><span style=\"color:var(--shiki-foreground)\"> leaving-scroller {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">  to {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">    opacity</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> .2</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">  }</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">}</span></span></code></pre>\n</code></pre>\n<p>Here we use the keyframes on a game if the browser supports the feature, and I clamp the keyframes with <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/animation-range\"><code>animation-range</code></a> to only run as the element exits the scrollport.</p>\n<pre><code class=\"language-css\"><pre class=\"shiki css-variables\" style=\"background-color:var(--shiki-background);color:var(--shiki-foreground)\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:var(--shiki-token-function)\">.game</span><span style=\"color:var(--shiki-foreground)\"> {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">  @</span><span style=\"color:var(--shiki-token-constant)\">media</span><span style=\"color:var(--shiki-foreground)\"> (</span><span style=\"color:var(--shiki-token-constant)\">prefers-reduced-motion</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> no-preference</span><span style=\"color:var(--shiki-foreground)\">) {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">    @</span><span style=\"color:var(--shiki-token-constant)\">supports</span><span style=\"color:var(--shiki-foreground)\"> (</span><span style=\"color:var(--shiki-token-constant)\">animation-timeline</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> view(x</span><span style=\"color:var(--shiki-foreground)\">)) {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">      animation</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> leaving-scroller linear both</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">      animation-timeline</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> view(x</span><span style=\"color:var(--shiki-foreground)\">);</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">      animation-range</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> exit 50</span><span style=\"color:var(--shiki-token-keyword)\">%</span><span style=\"color:var(--shiki-token-constant)\"> exit 100</span><span style=\"color:var(--shiki-token-keyword)\">%</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">    }</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">  }</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">}</span></span></code></pre>\n</code></pre>\n<p>See the <code>@layer lessons.scroll-animation</code> in <a href=\"https://codepen.io/argyleink/pen/ByNyvox?editors=0100\">the demo</a> for more comments.</p>\n\n        <h3>\n          Scroll State\n          <a name=\"scroll-state\" href=\"#scroll-state\">#</a>\n        </h3>\n       <p>Here we&#39;ll use the scroll-state containerization work from an earlier lesson. Two things occur when a game snaps into place:</p>\n<ol>\n<li>the pulsing blue focus outline highlights the game and animates forever</li>\n<li>the title of the game slides up</li>\n</ol>\n<p>By default I chose to always show the game titles, only applying the animation effect if the browser understands <code>scroll-state</code> queries.</p>\n<p>Here&#39;s the keyframes for when a game is snapped:</p>\n<pre><code class=\"language-css\"><pre class=\"shiki css-variables\" style=\"background-color:var(--shiki-background);color:var(--shiki-foreground)\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:var(--shiki-token-keyword)\">@keyframes</span><span style=\"color:var(--shiki-foreground)\"> game-focus {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">  from {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">    outline-color</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-function)\"> hsl</span><span style=\"color:var(--shiki-token-constant)\">(200 100</span><span style=\"color:var(--shiki-token-keyword)\">%</span><span style=\"color:var(--shiki-token-constant)\"> 50</span><span style=\"color:var(--shiki-token-keyword)\">%</span><span style=\"color:var(--shiki-token-constant)\">)</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">  }</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">  to {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">    outline-color</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-function)\"> hsl</span><span style=\"color:var(--shiki-token-constant)\">(200 100</span><span style=\"color:var(--shiki-token-keyword)\">%</span><span style=\"color:var(--shiki-token-constant)\"> 80</span><span style=\"color:var(--shiki-token-keyword)\">%</span><span style=\"color:var(--shiki-token-constant)\">)</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">  }</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">}</span></span></code></pre>\n</code></pre>\n<p>The game image uses the keyframes when it&#39;s parent <code>.game</code> parent container is snapped on x, and the image title slides down when it&#39;s parent game is not snapped.</p>\n<pre><code class=\"language-css\"><pre class=\"shiki css-variables\" style=\"background-color:var(--shiki-background);color:var(--shiki-foreground)\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:var(--shiki-token-function)\">.game</span><span style=\"color:var(--shiki-foreground)\"> {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">  img</span><span style=\"color:var(--shiki-foreground)\"> {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">    @</span><span style=\"color:var(--shiki-token-constant)\">container</span><span style=\"color:var(--shiki-token-constant)\"> scroll-state</span><span style=\"color:var(--shiki-foreground)\">(</span><span style=\"color:var(--shiki-token-constant)\">snapped</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> x</span><span style=\"color:var(--shiki-foreground)\">) {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">      outline</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> 5</span><span style=\"color:var(--shiki-token-keyword)\">px</span><span style=\"color:var(--shiki-token-constant)\"> solid blue</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">      outline-offset</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> 5</span><span style=\"color:var(--shiki-token-keyword)\">px</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">      animation</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> game-focus .5</span><span style=\"color:var(--shiki-token-keyword)\">s</span><span style=\"color:var(--shiki-token-function)\"> var</span><span style=\"color:var(--shiki-token-constant)\">(--ease-3) alternate infinite</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">    }</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-string-expression)\">  figcaption</span><span style=\"color:var(--shiki-foreground)\"> {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">    @</span><span style=\"color:var(--shiki-token-constant)\">media</span><span style=\"color:var(--shiki-foreground)\"> (</span><span style=\"color:var(--shiki-token-constant)\">prefers-reduced-motion</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> no-preference</span><span style=\"color:var(--shiki-foreground)\">) {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">      z-index</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> -1</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">      transition</span><span style=\"color:var(--shiki-token-keyword)\">:</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">        translate .5</span><span style=\"color:var(--shiki-token-keyword)\">s</span><span style=\"color:var(--shiki-token-function)\"> var</span><span style=\"color:var(--shiki-token-constant)\">(--ease-spring-2) .2</span><span style=\"color:var(--shiki-token-keyword)\">s</span><span style=\"color:var(--shiki-token-punctuation)\">,</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">        opacity .5</span><span style=\"color:var(--shiki-token-keyword)\">s</span><span style=\"color:var(--shiki-token-function)\"> var</span><span style=\"color:var(--shiki-token-constant)\">(--ease-3) .2</span><span style=\"color:var(--shiki-token-keyword)\">s</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">      @</span><span style=\"color:var(--shiki-token-constant)\">container</span><span style=\"color:var(--shiki-token-constant)\"> not</span><span style=\"color:var(--shiki-token-constant)\"> scroll-state</span><span style=\"color:var(--shiki-foreground)\">(</span><span style=\"color:var(--shiki-token-constant)\">snapped</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> x</span><span style=\"color:var(--shiki-foreground)\">) {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">        translate</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> 0 50</span><span style=\"color:var(--shiki-token-keyword)\">px</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">        opacity</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> 0</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">      }</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">    }</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">  }</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">}</span></span></code></pre>\n</code></pre>\n<p>See the <code>@layer lessons.scroll-state</code> in <a href=\"https://codepen.io/argyleink/pen/ByNyvox?editors=0100\">the demo</a> for more comments.</p>\n\n        <h3>\n          Colorization\n          <a name=\"colorization\" href=\"#colorization\">#</a>\n        </h3>\n       <p>The goal of this section is to match the Switch Homescreen&#39;s scroller style with <code>::-webkit-*</code> scroll features, while also providing a meaningful fallback with <code>scrollbar-color</code>. In addition to integrated colors and sizing, I also add a few interactive moments like when a keyboard is focused inside the scroller, or a mouse is hovering the thumb.</p>\n<ol>\n<li>Integrate scrollbar colors into the adaptive light/dark/forced colors themes</li>\n<li>Add hover and focus &quot;hints and feedback&quot;</li>\n</ol>\n<p>Look at how cool the forced colors styles are. <strong>Transparent borders are your friend!</strong></p>\n<p><picture>\n            <source srcset=\"/media/switch-homescreen-forced-light-dark.avif\" type=\"image/avif\">\n            <source srcset=\"/media/switch-homescreen-forced-light-dark.webp\" type=\"image/webp\">\n            <img \n              loading=\"lazy\" \n              src=\"/media/switch-homescreen-forced-light-dark.jpg\" \n              alt=\"\" \n              title=\"Title \" \n              decoding=\"async\"\n              width=\"2000\" \n              height=\"662\"\n            />\n          </picture></p>\n<p>Compare that with the light and dark styles:</p>\n<p><picture>\n            <source srcset=\"/media/switch-homescreen-both-light-dark.avif\" type=\"image/avif\">\n            <source srcset=\"/media/switch-homescreen-both-light-dark.webp\" type=\"image/webp\">\n            <img \n              loading=\"lazy\" \n              src=\"/media/switch-homescreen-both-light-dark.jpg\" \n              alt=\"\" \n              title=\"Title \" \n              decoding=\"async\"\n              width=\"2000\" \n              height=\"662\"\n            />\n          </picture></p>\n<p>It takes a lot of selectors and styles to do this robust colorization, here&#39;s the chunk that does the work.</p>\n<pre><code class=\"language-css\"><pre class=\"shiki css-variables\" style=\"background-color:var(--shiki-background);color:var(--shiki-foreground)\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:var(--shiki-token-function)\">.scroll--viewport</span><span style=\"color:var(--shiki-foreground)\"> {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">  &#x26;</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\">is(:focus-visible</span><span style=\"color:var(--shiki-token-punctuation)\">,</span><span style=\"color:var(--shiki-token-constant)\"> :focus-within</span><span style=\"color:var(--shiki-foreground)\">) {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">    outline-offset</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> -2</span><span style=\"color:var(--shiki-token-keyword)\">px</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">    outline</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> none</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">  &#x26;</span><span style=\"color:var(--shiki-token-function)\">::-webkit-scrollbar</span><span style=\"color:var(--shiki-foreground)\"> {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">    height</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> 10</span><span style=\"color:var(--shiki-token-keyword)\">px</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">  &#x26;</span><span style=\"color:var(--shiki-token-function)\">::-webkit-scrollbar-track</span><span style=\"color:var(--shiki-foreground)\"> {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">    background</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> #0000</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">    background-clip</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> padding-box</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">  &#x26;</span><span style=\"color:var(--shiki-token-function)\">::-webkit-scrollbar-thumb</span><span style=\"color:var(--shiki-foreground)\"> {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">    background</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-function)\"> color-mix</span><span style=\"color:var(--shiki-token-constant)\">(in srgb</span><span style=\"color:var(--shiki-token-punctuation)\">,</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">      light-dark(</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-function)\">        var</span><span style=\"color:var(--shiki-token-constant)\">(--surface-4)</span><span style=\"color:var(--shiki-token-punctuation)\">,</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-function)\">        var</span><span style=\"color:var(--shiki-token-constant)\">(--surface-2)</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">      )</span><span style=\"color:var(--shiki-token-punctuation)\">,</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">      #0000 50</span><span style=\"color:var(--shiki-token-keyword)\">%</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">    );</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">    border-radius</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> 1e3</span><span style=\"color:var(--shiki-token-keyword)\">px</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">    border</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> 3</span><span style=\"color:var(--shiki-token-keyword)\">px</span><span style=\"color:var(--shiki-token-constant)\"> solid </span><span style=\"color:var(--shiki-token-function)\">var</span><span style=\"color:var(--shiki-token-constant)\">(--surface-1)</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">  &#x26;</span><span style=\"color:var(--shiki-token-function)\">:is</span><span style=\"color:var(--shiki-foreground)\">(</span><span style=\"color:var(--shiki-token-function)\">:focus-visible</span><span style=\"color:var(--shiki-token-punctuation)\">,</span><span style=\"color:var(--shiki-token-function)\"> :focus-within</span><span style=\"color:var(--shiki-foreground)\">)</span><span style=\"color:var(--shiki-token-function)\">::-webkit-scrollbar-thumb</span><span style=\"color:var(--shiki-foreground)\"> {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">    background</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-function)\"> var</span><span style=\"color:var(--shiki-token-constant)\">(--link)</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-keyword)\">  @media</span><span style=\"color:var(--shiki-foreground)\"> (</span><span style=\"color:var(--shiki-token-constant)\">hover</span><span style=\"color:var(--shiki-foreground)\">) {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">    &#x26;</span><span style=\"color:var(--shiki-token-function)\">::-webkit-scrollbar-thumb:hover</span><span style=\"color:var(--shiki-foreground)\"> {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">      background</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> light-dark(</span><span style=\"color:var(--shiki-token-function)\">var</span><span style=\"color:var(--shiki-token-constant)\">(--surface-4)</span><span style=\"color:var(--shiki-token-punctuation)\">,</span><span style=\"color:var(--shiki-token-function)\"> var</span><span style=\"color:var(--shiki-token-constant)\">(--surface-2)</span><span style=\"color:var(--shiki-foreground)\">);</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">    &#x26;</span><span style=\"color:var(--shiki-token-function)\">::-webkit-scrollbar</span><span style=\"color:var(--shiki-foreground)\"> {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">      opacity</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> .5</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">    &#x26;</span><span style=\"color:var(--shiki-token-function)\">::-webkit-scrollbar:hover</span><span style=\"color:var(--shiki-foreground)\"> {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">      opacity</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> 1</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">    }</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-keyword)\">  @supports</span><span style=\"color:var(--shiki-foreground)\"> (</span><span style=\"color:var(--shiki-token-constant)\">-moz-appearance</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\">none</span><span style=\"color:var(--shiki-foreground)\">) {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-string-expression)\">    scrollbar-width</span><span style=\"color:var(--shiki-foreground)\">: thin;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-string-expression)\">    scrollbar-color</span><span style=\"color:var(--shiki-foreground)\">: var(--surface-4) #0000;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">    transition: </span><span style=\"color:var(--shiki-token-string-expression)\">scrollbar-color</span><span style=\"color:var(--shiki-foreground)\"> .3s ease;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">    &#x26;</span><span style=\"color:var(--shiki-token-function)\">:is</span><span style=\"color:var(--shiki-foreground)\">(</span><span style=\"color:var(--shiki-token-function)\">:focus-visible</span><span style=\"color:var(--shiki-token-punctuation)\">,</span><span style=\"color:var(--shiki-token-function)\"> :focus-within</span><span style=\"color:var(--shiki-foreground)\">) {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">      scrollbar-color</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-function)\"> var</span><span style=\"color:var(--shiki-token-constant)\">(--link) #0000</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-keyword)\">    @media</span><span style=\"color:var(--shiki-foreground)\"> (</span><span style=\"color:var(--shiki-token-constant)\">hover</span><span style=\"color:var(--shiki-foreground)\">) {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-string-expression)\">      scrollbar-color</span><span style=\"color:var(--shiki-foreground)\">:</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">        color-mix(in srgb</span><span style=\"color:var(--shiki-token-punctuation)\">,</span><span style=\"color:var(--shiki-foreground)\"> var(--surface-4), #0000 50%)</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">        #0000;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">      &#x26;</span><span style=\"color:var(--shiki-token-function)\">:hover</span><span style=\"color:var(--shiki-foreground)\"> {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">        scrollbar-color</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-function)\"> var</span><span style=\"color:var(--shiki-token-constant)\">(--surface-4) #0000</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">      }</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">    }</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">  }</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">}</span></span></code></pre>\n</code></pre>\n<p>See the <code>@layer lessons.colorize</code> in <a href=\"https://codepen.io/argyleink/pen/ByNyvox?editors=0100\">the demo</a> for more comments.</p>\n\n        <h3>\n          Content Introduction\n          <a name=\"content-introduction\" href=\"#content-introduction\">#</a>\n        </h3>\n       <p>Finally, on load, introduce the content from the right, providing the hint that there&#39;s directionality in this games list, hinting at scroll.</p>\n<p>The star of this effect is <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/@starting-style\"><code>@starting-style</code></a>.</p>\n<pre><code class=\"language-css\"><pre class=\"shiki css-variables\" style=\"background-color:var(--shiki-background);color:var(--shiki-foreground)\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:var(--shiki-token-function)\">.scroll--content</span><span style=\"color:var(--shiki-token-function)\"> .game</span><span style=\"color:var(--shiki-foreground)\"> {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">  @</span><span style=\"color:var(--shiki-token-constant)\">media</span><span style=\"color:var(--shiki-foreground)\"> (</span><span style=\"color:var(--shiki-token-constant)\">prefers-reduced-motion</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> no-preference</span><span style=\"color:var(--shiki-foreground)\">) {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">    transition</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> transform 1</span><span style=\"color:var(--shiki-token-keyword)\">s</span><span style=\"color:var(--shiki-token-function)\"> var</span><span style=\"color:var(--shiki-token-constant)\">(--ease-spring-2)</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">    transition-delay</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-function)\"> calc</span><span style=\"color:var(--shiki-token-constant)\">(</span><span style=\"color:var(--shiki-token-function)\">var</span><span style=\"color:var(--shiki-token-constant)\">(--i) </span><span style=\"color:var(--shiki-token-keyword)\">*</span><span style=\"color:var(--shiki-token-constant)\"> .05</span><span style=\"color:var(--shiki-token-keyword)\">s</span><span style=\"color:var(--shiki-token-constant)\">)</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">    @</span><span style=\"color:var(--shiki-token-constant)\">starting-style</span><span style=\"color:var(--shiki-foreground)\"> {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">      transform</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-function)\"> translateX</span><span style=\"color:var(--shiki-token-constant)\">(100</span><span style=\"color:var(--shiki-token-keyword)\">vw</span><span style=\"color:var(--shiki-token-constant)\">) </span><span style=\"color:var(--shiki-token-function)\">translateZ</span><span style=\"color:var(--shiki-token-constant)\">(</span><span style=\"color:var(--shiki-token-function)\">calc</span><span style=\"color:var(--shiki-token-constant)\">(</span><span style=\"color:var(--shiki-token-function)\">var</span><span style=\"color:var(--shiki-token-constant)\">(--i) </span><span style=\"color:var(--shiki-token-keyword)\">*</span><span style=\"color:var(--shiki-token-constant)\"> -1</span><span style=\"color:var(--shiki-token-keyword)\">px</span><span style=\"color:var(--shiki-token-constant)\">))</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">    }</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">  }</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">}</span></span></code></pre>\n</code></pre>\n<p>See the <code>@layer lessons.loading-animation</code> in <a href=\"https://codepen.io/argyleink/pen/ByNyvox?editors=0100\">the demo</a> for more comments.</p>\n\n        <h2>\n          JavaScript\n          <a name=\"javascript\" href=\"#javascript\">#</a>\n        </h2>\n       <p>Iconically, the Switch homescreen has both haptic and audibal feedback for your interactions, specifically to the scroller.</p>\n<ol>\n<li>Snap &quot;click&quot; when the scroller rests on a game</li>\n<li>Pop sound as each game passes by the snap area</li>\n<li>Haptic feedback as a game passes over the snap area</li>\n<li>Ability to tap to snap</li>\n</ol>\n\n        <h3>\n          Preload\n          <a name=\"preload\" href=\"#preload\">#</a>\n        </h3>\n       <p>First let&#39;s preload the sounds so they can play instantly at first.</p>\n<pre><code class=\"language-js\"><pre class=\"shiki css-variables\" style=\"background-color:var(--shiki-background);color:var(--shiki-foreground)\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:var(--shiki-token-keyword)\">const</span><span style=\"color:var(--shiki-token-constant)\"> sounds</span><span style=\"color:var(--shiki-token-keyword)\"> =</span><span style=\"color:var(--shiki-foreground)\"> {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">  snap</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-keyword)\"> new</span><span style=\"color:var(--shiki-token-function)\"> Audio</span><span style=\"color:var(--shiki-foreground)\">(</span><span style=\"color:var(--shiki-token-string-expression)\">'https://assets.codepen.io/2585/snap.mp3'</span><span style=\"color:var(--shiki-foreground)\">)</span><span style=\"color:var(--shiki-token-punctuation)\">,</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">  pop</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-keyword)\"> new</span><span style=\"color:var(--shiki-token-function)\"> Audio</span><span style=\"color:var(--shiki-foreground)\">(</span><span style=\"color:var(--shiki-token-string-expression)\">'https://assets.codepen.io/2585/pop.m4a'</span><span style=\"color:var(--shiki-foreground)\">)</span><span style=\"color:var(--shiki-token-punctuation)\">,</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">}</span></span></code></pre>\n</code></pre>\n\n        <h3>\n          Tap to snap\n          <a name=\"tap-to-snap\" href=\"#tap-to-snap\">#</a>\n        </h3>\n       <p>If a user clicks a game, scroll it to the snap position.</p>\n<pre><code class=\"language-js\"><pre class=\"shiki css-variables\" style=\"background-color:var(--shiki-background);color:var(--shiki-foreground)\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">scroller</span><span style=\"color:var(--shiki-foreground)\">.</span><span style=\"color:var(--shiki-token-function)\">onclick</span><span style=\"color:var(--shiki-token-keyword)\"> =</span><span style=\"color:var(--shiki-foreground)\"> event </span><span style=\"color:var(--shiki-token-keyword)\">=></span><span style=\"color:var(--shiki-foreground)\"> {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-keyword)\">  let</span><span style=\"color:var(--shiki-foreground)\"> target </span><span style=\"color:var(--shiki-token-keyword)\">=</span><span style=\"color:var(--shiki-token-constant)\"> event</span><span style=\"color:var(--shiki-token-function)\">.</span><span style=\"color:var(--shiki-token-constant)\">target</span><span style=\"color:var(--shiki-token-function)\">.closest</span><span style=\"color:var(--shiki-foreground)\">(</span><span style=\"color:var(--shiki-token-string-expression)\">'.game'</span><span style=\"color:var(--shiki-foreground)\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-keyword)\">  if</span><span style=\"color:var(--shiki-foreground)\"> (target) {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">    scroller</span><span style=\"color:var(--shiki-token-function)\">.scrollTo</span><span style=\"color:var(--shiki-foreground)\">({</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">      left</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> target</span><span style=\"color:var(--shiki-foreground)\">.offsetLeft</span><span style=\"color:var(--shiki-token-punctuation)\">,</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">      behavior</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-string-expression)\"> 'smooth'</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">    })</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">  }</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">}</span></span></code></pre>\n</code></pre>\n\n        <h3>\n          Vibrate and pop\n          <a name=\"vibrate-and-pop\" href=\"#vibrate-and-pop\">#</a>\n        </h3>\n       <p>The lovely <a href=\"https://developer.chrome.com/blog/scroll-snap-events#scrollsnapchanging\"><code>scrollSnapChanging</code></a> event is perfectly fit for this task.</p>\n<pre><code class=\"language-js\"><pre class=\"shiki css-variables\" style=\"background-color:var(--shiki-background);color:var(--shiki-foreground)\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">scroller</span><span style=\"color:var(--shiki-foreground)\">.</span><span style=\"color:var(--shiki-token-function)\">onscrollsnapchanging</span><span style=\"color:var(--shiki-token-keyword)\"> =</span><span style=\"color:var(--shiki-foreground)\"> event </span><span style=\"color:var(--shiki-token-keyword)\">=></span><span style=\"color:var(--shiki-foreground)\"> {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">  navigator</span><span style=\"color:var(--shiki-token-function)\">?.vibrate</span><span style=\"color:var(--shiki-foreground)\">(</span><span style=\"color:var(--shiki-token-constant)\">50</span><span style=\"color:var(--shiki-foreground)\">)</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">  sounds</span><span style=\"color:var(--shiki-token-function)\">.</span><span style=\"color:var(--shiki-token-constant)\">pop</span><span style=\"color:var(--shiki-token-function)\">.play</span><span style=\"color:var(--shiki-foreground)\">()</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">}</span></span></code></pre>\n</code></pre>\n\n        <h3>\n          Snap\n          <a name=\"snap\" href=\"#snap\">#</a>\n        </h3>\n       <p>The complimentary scroll event <a href=\"https://developer.chrome.com/blog/scroll-snap-events#scrollsnapchange\"><code>scrollSnapChange</code></a> is perfectly fit for reporting scroll has ended and it&#39;s rested on a new snap target.</p>\n<pre><code class=\"language-js\"><pre class=\"shiki css-variables\" style=\"background-color:var(--shiki-background);color:var(--shiki-foreground)\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">scroller</span><span style=\"color:var(--shiki-foreground)\">.</span><span style=\"color:var(--shiki-token-function)\">onscrollsnapchange</span><span style=\"color:var(--shiki-token-keyword)\"> =</span><span style=\"color:var(--shiki-foreground)\"> event </span><span style=\"color:var(--shiki-token-keyword)\">=></span><span style=\"color:var(--shiki-foreground)\"> {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">  sounds</span><span style=\"color:var(--shiki-token-function)\">.</span><span style=\"color:var(--shiki-token-constant)\">snap</span><span style=\"color:var(--shiki-token-function)\">.play</span><span style=\"color:var(--shiki-foreground)\">()</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">}</span></span></code></pre>\n</code></pre>\n\n        <h2>\n          Outro\n          <a name=\"outro\" href=\"#outro\">#</a>\n        </h2>\n       <p>You made it, which means you definitely picked up some new tricks. Go forth and make great scroll experiences!</p>\n<p>I&#39;ll share a link to the talk if/when it comes out, which provides a lot of commentary on these decisions and styles. But also, in case it wasn&#39;t clear in the blog post, check out the demo for all the comments, they should help connect all the dots.</p>\n"
          },
          "link": {
            "#text": "https://nerdy.dev/nintendo-switch-homescreen-css-recreation?utm_source=rss"
          },
          "guid": {
            "#text": "https://nerdy.dev/nintendo-switch-homescreen-css-recreation?utm_source=rss",
            "@_isPermaLink": "true"
          },
          "category": [
            {
              "#text": "blog"
            },
            {
              "#text": "css"
            }
          ],
          "dc:creator": {
            "#text": "atom@argyleink"
          },
          "pubDate": {
            "#text": "Fri, 13 Jun 2025 22:16:31 GMT"
          },
          "enclosure": {
            "@_url": "https://nerdy.dev/media/switch-homescreen-both-light-dark.jpg",
            "@_length": "0",
            "@_type": "image/jpeg"
          },
          "media:thumbnail": {
            "@_url": "https://nerdy.dev/media/switch-homescreen-both-light-dark.jpg"
          }
        },
        {
          "title": {
            "#text": "CSS Day 2025 Speaker Pics"
          },
          "description": {
            "#text": "\n          <img style=\"display: none\" src=\"https://nerdy.dev/media/cssday-2025-1.jpg\" alt=\"Photo of me on stage gesturing to the crowd\" height=\"1333\" width=\"2000\" />\n        <p>It&#39;s an honor to speak at <a href=\"http://cssday.nl/\">CSS Day</a>, <strong>the biggest CSS conference</strong> every year.</p>\n<p>Hope y&#39;all enjoyed nerding out about <a href=\"/cssday-2025\">making beautiful scroll experiences</a>.</p>\n"
          },
          "link": {
            "#text": "https://nerdy.dev/css-day-2025-speaker-pics?utm_source=rss"
          },
          "guid": {
            "#text": "https://nerdy.dev/css-day-2025-speaker-pics?utm_source=rss",
            "@_isPermaLink": "true"
          },
          "category": [
            {
              "#text": "note"
            },
            {
              "#text": "talks"
            }
          ],
          "dc:creator": {
            "#text": "atom@argyleink"
          },
          "pubDate": {
            "#text": "Fri, 13 Jun 2025 19:06:03 GMT"
          },
          "enclosure": {
            "@_url": "https://nerdy.dev/media/cssday-2025-1.jpg",
            "@_length": "0",
            "@_type": "image/jpeg"
          },
          "media:thumbnail": {
            "@_url": "https://nerdy.dev/media/cssday-2025-1.jpg"
          }
        },
        {
          "title": {
            "#text": "Prefers Reduced Transparency"
          },
          "description": {
            "#text": "\n          <img style=\"display: none\" src=\"https://nerdy.dev/media/reduced-transparency.jpg\" alt=\"An image with a caption is showed in two styles, one with a semi-transparent overlay of the caption and one with the caption underneath the image with no transparency used at all.\" height=\"1112\" width=\"2910\" />\n        <p>It&#39;s not a challenge to design for <a href=\"https://developer.chrome.com/blog/css-prefers-reduced-transparency\">reduced transparency</a>, <strong>it&#39;s an opportunity</strong>.</p>\n<ul>\n<li><a href=\"https://codepen.io/argyleink/full/YzBKBaR\">A card with a caption</a></li>\n<li><a href=\"https://codepen.io/argyleink/full/qBmJyvv\">Adaptive frosted glass</a></li>\n</ul>\n"
          },
          "link": {
            "#text": "https://nerdy.dev/prefers-reduced-transparency?utm_source=rss"
          },
          "guid": {
            "#text": "https://nerdy.dev/prefers-reduced-transparency?utm_source=rss",
            "@_isPermaLink": "true"
          },
          "category": [
            {
              "#text": "note"
            },
            {
              "#text": "css"
            }
          ],
          "dc:creator": {
            "#text": "atom@argyleink"
          },
          "pubDate": {
            "#text": "Tue, 10 Jun 2025 20:38:27 GMT"
          },
          "enclosure": {
            "@_url": "https://nerdy.dev/media/reduced-transparency.jpg",
            "@_length": "0",
            "@_type": "image/jpeg"
          },
          "media:thumbnail": {
            "@_url": "https://nerdy.dev/media/reduced-transparency.jpg"
          }
        },
        {
          "title": {
            "#text": "CSSday 2025"
          },
          "description": {
            "#text": "\n          <img style=\"display: none\" src=\"https://nerdy.dev/media/ultimate-scroller.jpg\" alt=\"CSS Day 2025 The Ultimate Scroller\" height=\"1534\" width=\"2954\" />\n        <p><a href=\"https://cssday.nl/speakers.html#adam\">Speaking</a> in just a couple hours 🤘🏻💀</p>\n<p><a href=\"https://css-day-2025.argyleink.deno.net\">The Slides</a> · <a href=\"https://codepen.io/collection/JYdmwr\">Codepen Collection</a></p>\n"
          },
          "link": {
            "#text": "https://nerdy.dev/cssday-2025?utm_source=rss"
          },
          "guid": {
            "#text": "https://nerdy.dev/cssday-2025?utm_source=rss",
            "@_isPermaLink": "true"
          },
          "category": [
            {
              "#text": "note"
            },
            {
              "#text": "css"
            },
            {
              "#text": "talks"
            }
          ],
          "dc:creator": {
            "#text": "atom@argyleink"
          },
          "pubDate": {
            "#text": "Thu, 05 Jun 2025 05:34:55 GMT"
          },
          "enclosure": {
            "@_url": "https://nerdy.dev/media/ultimate-scroller.jpg",
            "@_length": "0",
            "@_type": "image/jpeg"
          },
          "media:thumbnail": {
            "@_url": "https://nerdy.dev/media/ultimate-scroller.jpg"
          }
        },
        {
          "title": {
            "#text": "Off To CSS Day 2025"
          },
          "description": {
            "#text": "\n          <img style=\"display: none\" src=\"https://nerdy.dev/media/cssday-2024-swag.jpg\" alt=\"A pile of CSS Day sticker swag is on a table\" height=\"1066\" width=\"1600\" />\n        <p>Off to <a href=\"https://cssday.nl\">CSS Day</a>; see ya there‽</p>\n"
          },
          "link": {
            "#text": "https://nerdy.dev/off-to-css-day-2025?utm_source=rss"
          },
          "guid": {
            "#text": "https://nerdy.dev/off-to-css-day-2025?utm_source=rss",
            "@_isPermaLink": "true"
          },
          "category": [
            {
              "#text": "note"
            },
            {
              "#text": "css"
            }
          ],
          "dc:creator": {
            "#text": "atom@argyleink"
          },
          "pubDate": {
            "#text": "Mon, 02 Jun 2025 01:53:53 GMT"
          },
          "enclosure": {
            "@_url": "https://nerdy.dev/media/cssday-2024-swag.jpg",
            "@_length": "0",
            "@_type": "image/jpeg"
          },
          "media:thumbnail": {
            "@_url": "https://nerdy.dev/media/cssday-2024-swag.jpg"
          }
        },
        {
          "title": {
            "#text": "Mt Rainier Boat Banjo"
          },
          "description": {
            "#text": "\n          <img style=\"display: none\" src=\"https://nerdy.dev/media/rainier-boat-banjo.jpg\" alt=\"me on a small boat playing banjo with Mt Rainier behind me\" height=\"1700\" width=\"2268\" />\n        <p><a href=\"https://en.wikipedia.org/wiki/Mount_Rainier\">Mt. Rainier</a> in the bg, on a friend&#39;s little personal website boat, playin banjo tunes in <a href=\"https://benjiflaming.com/banjo-stuff/solo-banjo-tunings/double-c\">double C</a>:</p>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=UKt9Z38yCvA\">Sally in the Garden</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=Ea9GzQ7331w\">Darlin&#39; Cori</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=QN0_nOBUGCU\">Fly Away</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=BxIpGnGNT4g\">Zelda&#39;s Lullaby</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=aht8ywI8v6g\">30 Turkeys</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=eLauF1i27OE\">Smoke</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=tAaGKo4XVvM\">Mario Overworld Theme</a></li>\n</ul>\n<p>Vibe check? This is the way.</p>\n"
          },
          "link": {
            "#text": "https://nerdy.dev/mt-rainier-boat-banjo?utm_source=rss"
          },
          "guid": {
            "#text": "https://nerdy.dev/mt-rainier-boat-banjo?utm_source=rss",
            "@_isPermaLink": "true"
          },
          "category": {
            "#text": "note"
          },
          "dc:creator": {
            "#text": "dad@pops"
          },
          "pubDate": {
            "#text": "Thu, 29 May 2025 03:58:04 GMT"
          },
          "enclosure": {
            "@_url": "https://nerdy.dev/media/rainier-boat-banjo.jpg",
            "@_length": "0",
            "@_type": "image/jpeg"
          },
          "media:thumbnail": {
            "@_url": "https://nerdy.dev/media/rainier-boat-banjo.jpg"
          }
        },
        {
          "title": {
            "#text": "3 Unintuitive CSS Layout “Solutions”"
          },
          "description": {
            "#text": "\n          <img style=\"display: none\" src=\"https://nerdy.dev/media/CSS.jpg\" alt=\"Text emphasized alt text example\" height=\"500\" width=\"1500\" />\n        <p>Here are a few of my least favorite, easy to forget, unintuitive CSS layout &quot;solutions&quot;:</p>\n<pre><code class=\"language-css\"><pre class=\"shiki css-variables\" style=\"background-color:var(--shiki-background);color:var(--shiki-foreground)\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:var(--shiki-token-function)\">.wat</span><span style=\"color:var(--shiki-foreground)\"> {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">  min-height</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> 0</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">  min-width</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> 0</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">  flex-shrink</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> 0</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">}</span></span></code></pre>\n</code></pre>\n<p>Height 0? <a href=\"https://www.destroyallsoftware.com/talks/wat\">Wat</a>? Shrink 0? <a href=\"https://www.destroyallsoftware.com/talks/wat\">Wat</a>? Theo <a href=\"https://www.youtube.com/watch?v=cH8VbLM1958\">thinks he likes it</a>. But…</p>\n<p><picture>\n            <source srcset=\"/media/wat.avif\" type=\"image/avif\">\n            <source srcset=\"/media/wat.webp\" type=\"image/webp\">\n            <img \n              loading=\"lazy\" \n              src=\"/media/wat.png\" \n              alt=\"\" \n              title=\"A horse on a boat on the ocean holding a kitten \" \n              decoding=\"async\"\n              width=\"1384\" \n              height=\"904\"\n            />\n          </picture></p>\n<p>Then there&#39;s minmax(min(), 1fr)? <a href=\"https://www.destroyallsoftware.com/talks/wat\">Wat</a>?</p>\n<pre><code class=\"language-css\"><pre class=\"shiki css-variables\" style=\"background-color:var(--shiki-background);color:var(--shiki-foreground)\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:var(--shiki-token-function)\">.uhhhhhh</span><span style=\"color:var(--shiki-foreground)\"> {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">  grid-template-columns</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-function)\"> repeat</span><span style=\"color:var(--shiki-token-constant)\">(auto-fill</span><span style=\"color:var(--shiki-token-punctuation)\">,</span><span style=\"color:var(--shiki-token-function)\"> minmax</span><span style=\"color:var(--shiki-token-constant)\">(</span><span style=\"color:var(--shiki-token-function)\">min</span><span style=\"color:var(--shiki-token-constant)\">(10</span><span style=\"color:var(--shiki-token-keyword)\">rem</span><span style=\"color:var(--shiki-token-punctuation)\">,</span><span style=\"color:var(--shiki-token-constant)\"> 100</span><span style=\"color:var(--shiki-token-keyword)\">%</span><span style=\"color:var(--shiki-token-constant)\">)</span><span style=\"color:var(--shiki-token-punctuation)\">,</span><span style=\"color:var(--shiki-token-constant)\"> 1</span><span style=\"color:var(--shiki-token-keyword)\">fr</span><span style=\"color:var(--shiki-token-constant)\">))</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">}</span></span></code></pre>\n</code></pre>\n<p><small>Functional programming much?…</small></p>\n\n        <h2>\n          Remove intrinsic minimal sizing\n          <a name=\"remove-intrinsic-minimal-sizing\" href=\"#remove-intrinsic-minimal-sizing\">#</a>\n        </h2>\n       <p>The minimum width of grid and flex children is <code>auto</code>. Setting it explicitly to <code>0</code> removes the intrinsic size, unlocking various things.</p>\n<pre><code class=\"language-css\"><pre class=\"shiki css-variables\" style=\"background-color:var(--shiki-background);color:var(--shiki-foreground)\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:var(--shiki-token-function)\">.example-1</span><span style=\"color:var(--shiki-foreground)\"> {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">  min-height</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> 0</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">  min-width</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> 0</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">}</span></span></code></pre>\n</code></pre>\n<p>Study more about it on <a href=\"https://css-tricks.com/preventing-a-grid-blowout/\">CSS Tricks by Chris Coyier</a> or from <a href=\"https://www.youtube.com/watch?v=cH8VbLM1958\">Theo over on YouTube</a>.</p>\n\n        <h2>\n          Don&#39;t squish me\n          <a name=\"don&#39;t-squish-me\" href=\"#don&#39;t-squish-me\">#</a>\n        </h2>\n       <p>Often I&#39;ll make a flex layout where 1 child should be &quot;pushy&quot; or a dominant space consumer. Works great until a sibling to the pusher goes oval at small viewports, even though a firm <code>height</code> and <code>width</code> are set.</p>\n<p><strong>The fix:</strong><br>\nDon&#39;t squish me, my <code>flex-shrink</code> is 0... which indicates false? which means I don&#39;t want to shrink? I am unshrinkable. I have no shrinkability.</p>\n<pre><code class=\"language-css\"><pre class=\"shiki css-variables\" style=\"background-color:var(--shiki-background);color:var(--shiki-foreground)\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:var(--shiki-token-function)\">.example-2</span><span style=\"color:var(--shiki-foreground)\"> {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">  flex-shrink</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-constant)\"> 0</span><span style=\"color:var(--shiki-foreground)\">;</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">}</span></span></code></pre>\n</code></pre>\n<p>So intuitive. Not.</p>\n\n        <h2>\n          Intrinsically responsive grid columns\n          <a name=\"intrinsically-responsive-grid-columns\" href=\"#intrinsically-responsive-grid-columns\">#</a>\n        </h2>\n       <p>So I don&#39;t have this full, triple nested function memorized. I can remember &quot;repeat, auto-fit, minmax&quot; as like the summary of the trick. Which gets me this far:</p>\n<pre><code class=\"language-css\"><pre class=\"shiki css-variables\" style=\"background-color:var(--shiki-background);color:var(--shiki-foreground)\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:var(--shiki-token-function)\">.example-3</span><span style=\"color:var(--shiki-foreground)\"> {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">  grid-template-columns</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-function)\"> repeat</span><span style=\"color:var(--shiki-token-constant)\">(auto-fill</span><span style=\"color:var(--shiki-token-punctuation)\">,</span><span style=\"color:var(--shiki-token-function)\"> minmax</span><span style=\"color:var(--shiki-token-constant)\">(10</span><span style=\"color:var(--shiki-token-keyword)\">rem</span><span style=\"color:var(--shiki-token-punctuation)\">,</span><span style=\"color:var(--shiki-token-constant)\"> 1</span><span style=\"color:var(--shiki-token-keyword)\">fr</span><span style=\"color:var(--shiki-token-constant)\">))</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">}</span></span></code></pre>\n</code></pre>\n<p>But that&#39;s not the full snippet I end up using in production. It works great until it&#39;s a single column of <code>10rem</code> minimum width boxes. At which point, they dont go smaller, and so they can cause horizontal overflow in a parent container that&#39;s smaller than <code>10rem</code>.</p>\n<p><strong>The fix:</strong><br>\nadd <code>min(10rem, 100%)</code> in place of <code>10rem</code>.</p>\n<pre><code class=\"language-css\"><pre class=\"shiki css-variables\" style=\"background-color:var(--shiki-background);color:var(--shiki-foreground)\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:var(--shiki-token-function)\">.example-3</span><span style=\"color:var(--shiki-foreground)\"> {</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-token-constant)\">  grid-template-columns</span><span style=\"color:var(--shiki-token-keyword)\">:</span><span style=\"color:var(--shiki-token-function)\"> repeat</span><span style=\"color:var(--shiki-token-constant)\">(auto-fill</span><span style=\"color:var(--shiki-token-punctuation)\">,</span><span style=\"color:var(--shiki-token-function)\"> minmax</span><span style=\"color:var(--shiki-token-constant)\">(</span><span style=\"color:var(--shiki-token-function)\">min</span><span style=\"color:var(--shiki-token-constant)\">(10</span><span style=\"color:var(--shiki-token-keyword)\">rem</span><span style=\"color:var(--shiki-token-punctuation)\">,</span><span style=\"color:var(--shiki-token-constant)\"> 100</span><span style=\"color:var(--shiki-token-keyword)\">%</span><span style=\"color:var(--shiki-token-constant)\">)</span><span style=\"color:var(--shiki-token-punctuation)\">,</span><span style=\"color:var(--shiki-token-constant)\"> 1</span><span style=\"color:var(--shiki-token-keyword)\">fr</span><span style=\"color:var(--shiki-token-constant)\">))</span></span>\n<span class=\"line\"><span style=\"color:var(--shiki-foreground)\">}</span></span></code></pre>\n</code></pre>\n<p>It&#39;s extra to write, but it unlocks the &quot;intrinsically responsive grid layout&quot;, which behaves as I was hoping all along.</p>\n<p>Study more in <a href=\"https://evanminto.com/blog/intrinsically-responsive-css-grid-minmax-min/\">this post from Evan Minto</a>:</p>\n<p><q>When the container is smaller than 10rem, the minimum value in our minmax() expression is set to the full width of the container, giving us a nice single-column view with no overflow. When the container is larger than 10rem, the minimum value is set to 10rem, so we get a responsive grid with equal tracks of at least 10rem each.</q></p>\n"
          },
          "link": {
            "#text": "https://nerdy.dev/3-unintuitive-layout-solutions?utm_source=rss"
          },
          "guid": {
            "#text": "https://nerdy.dev/3-unintuitive-layout-solutions?utm_source=rss",
            "@_isPermaLink": "true"
          },
          "category": [
            {
              "#text": "blog"
            },
            {
              "#text": "css"
            }
          ],
          "dc:creator": {
            "#text": "atom@argyleink"
          },
          "pubDate": {
            "#text": "Thu, 22 May 2025 19:51:25 GMT"
          },
          "enclosure": {
            "@_url": "https://nerdy.dev/media/CSS.jpg",
            "@_length": "0",
            "@_type": "image/jpeg"
          },
          "media:thumbnail": {
            "@_url": "https://nerdy.dev/media/CSS.jpg"
          }
        },
        {
          "title": {
            "#text": "Tag, I'm It"
          },
          "description": {
            "#text": "<p><a href=\"https://kilianvalkhof.com/2025/life/tag-youre-it/\">Killian</a> tagged me in this blog chain letter type thing to answer some questions about blogging. I accept 🙂</p>\n\n        <h2>\n          Why did you start blogging in the first place?\n          <a name=\"why-did-you-start-blogging-in-the-first-place?\" href=\"#why-did-you-start-blogging-in-the-first-place?\">#</a>\n        </h2>\n       <p>My first exploration into blogging was Wordpress, I called it Geek Devigner. I wanted to share about the cross of development and design (devigner). I didn&#39;t write on it much, I was still making mostly Flash and jQuery stuff. Needless to say, this wasn&#39;t a super popular topic to be blogging about.</p>\n<p>Later I wrote posts on Medium or Devto. This was mostly during the JAMstack wave, and I was really intent on optimizing the build systems so Jade was only rendering the render trees that changed all while making my own isomorphic framework. I also like Grunt more than Gulp, so again, this wasn&#39;t a super popular topic to be blogging about.</p>\n<p>After blogging and writing articles at Google, I wanted to write in my own voice and showcase CSS features while talking about CSS features. I figured most people these days are scrolling cards and like content feeds, so I modelled my site after these interactions and started blogging about CSS, Javascript and HTML stuff consistently for the first time.</p>\n\n        <h2>\n          What platform are you using to manage your blog and why did you choose it?\n          <a name=\"what-platform-are-you-using-to-manage-your-blog-and-why-did-you-choose-it?\" href=\"#what-platform-are-you-using-to-manage-your-blog-and-why-did-you-choose-it?\">#</a>\n        </h2>\n       <p>My current site/blog is built on <a href=\"https://deno.com/\">Deno</a> and their <a href=\"https://fresh.deno.dev/\">Fresh</a> framework. I blogged about it <a href=\"https://nerdy.dev/new-year-new-site\">here</a>.</p>\n<p><picture>\n            <source srcset=\"/media/fresh-features.avif\" type=\"image/avif\">\n            <source srcset=\"/media/fresh-features.webp\" type=\"image/webp\">\n            <img \n              loading=\"lazy\" \n              src=\"/media/fresh-features.jpg\" \n              alt=\"\" \n              title=\"A screenshot from the features list on the Fresh website \" \n              decoding=\"async\"\n              width=\"1538\" \n              height=\"854\"\n            />\n          </picture></p>\n<p>For me it was a decently minimal set of features that Fresh brought while Deno brought a small, safe, web standards focused server.</p>\n<p>I wanted to do lots of custom things, so I needed something that wasn&#39;t going to be in the way. I wanted to make something server first, a bit more socially integrated than previous static sites I&#39;d built, and to try out islands front-end architecture.</p>\n\n        <h2>\n          How do you write your posts?\n          <a name=\"how-do-you-write-your-posts?\" href=\"#how-do-you-write-your-posts?\">#</a>\n        </h2>\n       <p>I write posts in a markdown file with some custom frontmatter. Notes have slightly different frontmatter than blog posts, otherwise they&#39;re the same.</p>\n<p>I&#39;ve written all my own adapters for images, code snippets and videos. The images are swapped for a <code>&lt;picture&gt;</code> with optimised sources. The code snippets are rendered server side. Videos are also optimized, given poster images, and other cool stuff.</p>\n<p>All of this is done in a code editor. Currently <a href=\"https://zed.dev\">Zed</a>, but often <a href=\"https://windsurf.com/editor\">Windsurf</a>, <a href=\"https://www.sublimetext.com\">Sublime</a> or <a href=\"https://code.visualstudio.com\">VS Code</a> (I flop around alot, but usually go back to Sublime for the nicer text rendering and bootup speeds).</p>\n<p>If I need any special examples or interactives, I either write an inline style or script tag, or make a web component.</p>\n\n        <h2>\n          When do you feel most inspired to write?\n          <a name=\"when-do-you-feel-most-inspired-to-write?\" href=\"#when-do-you-feel-most-inspired-to-write?\">#</a>\n        </h2>\n       <p>When reading my RSS feed. But, that&#39;s not when I write… that&#39;s once the kids are asleep.</p>\n\n        <h2>\n          Do you publish immediately?\n          <a name=\"do-you-publish-immediately?\" href=\"#do-you-publish-immediately?\">#</a>\n        </h2>\n       <p>Longer form posts definitely simmer or chill in a branch for a while. Shorter form posts though, those can be authored and published in just a few minutes. I needed to have both opportunities, was important to me that both types of thoughts could be posted to my site.</p>\n\n        <h2>\n          What are you generally interested in writing about?\n          <a name=\"what-are-you-generally-interested-in-writing-about?\" href=\"#what-are-you-generally-interested-in-writing-about?\">#</a>\n        </h2>\n       <p>CSS, almost exclusively. However, every once in a while I&#39;ll share a JS tip (which is usually CSS adjacent).</p>\n\n        <h2>\n          What’s your favourite post on your blog?\n          <a name=\"what’s-your-favourite-post-on-your-blog?\" href=\"#what’s-your-favourite-post-on-your-blog?\">#</a>\n        </h2>\n       <p>There&#39;s a few that come to mind, but the winner is <a href=\"https://nerdy.dev/headless-boneless-and-skinless-ui\">Headless, boneless and skinless UI</a>. I liked how the piece came together around Halloween when the content was totally morbib sounding out of context.</p>\n\n        <h2>\n          Who are you writing for?\n          <a name=\"who-are-you-writing-for?\" href=\"#who-are-you-writing-for?\">#</a>\n        </h2>\n       <p>UI and UX engineers, a few designers and other folks who want to stay up to date on CSS. Mostly writing for professionals or experts, but do try to make things minimal to reduce learning friction for everyone.</p>\n\n        <h2>\n          Any future plans for your blog?\n          <a name=\"any-future-plans-for-your-blog?\" href=\"#any-future-plans-for-your-blog?\">#</a>\n        </h2>\n       <p>I&#39;ve got quite a long list of features in the backlog.</p>\n<p>I&#39;d like to add a bunch more &quot;slashers&quot;, which are just cool slash pages like <a href=\"https://nerdy.dev/follows\">/follows</a> and <a href=\"https://nerdy.dev/404\">/404</a>. So far I&#39;ve got <code>/talks</code>, <code>/experiments</code>, <code>/avatar</code>, <code>/toolkit</code>, and <code>/links</code> in the backlog.</p>\n<p>I&#39;ve got the personas already, but I want to give them their own profile pages with all their specific posts. They&#39;d also get their own RSS feeds 😉</p>\n<p>The most notable backlog item, is to have <a href=\"https://www.playbalatro.com\">Balatro</a> style powerups and &quot;shiny&quot; type effects for the cards on the home feed. Just a little piece of frontmatter that adds a class to the card, then CSS does the rest: makes a post foiled, or cracked, or holographic. Be so fun to make.</p>\n\n        <h2>\n          Who am I going to tag?\n          <a name=\"who-am-i-going-to-tag?\" href=\"#who-am-i-going-to-tag?\">#</a>\n        </h2>\n       <p>Maybe you? Anyone out there want to be tagged?</p>\n<p>I&#39;ll tag you right here.</p>\n"
          },
          "link": {
            "#text": "https://nerdy.dev/blogging-about-blogging?utm_source=rss"
          },
          "guid": {
            "#text": "https://nerdy.dev/blogging-about-blogging?utm_source=rss",
            "@_isPermaLink": "true"
          },
          "category": {
            "#text": "blog"
          },
          "dc:creator": {
            "#text": "Web Master@admin"
          },
          "pubDate": {
            "#text": "Mon, 12 May 2025 15:21:30 GMT"
          }
        }
      ]
    },
    "@_xmlns:dc": "http://purl.org/dc/elements/1.1/",
    "@_xmlns:content": "http://purl.org/rss/1.0/modules/content/",
    "@_xmlns:atom": "http://www.w3.org/2005/Atom",
    "@_version": "2.0",
    "@_xmlns:media": "http://search.yahoo.com/mrss/"
  }
}
